# Read Me First

Task 1 : Build a simple Maven Spring-boot app along with a simple REST API 

Task 2 : Install Oracle DB and connect to DB by including connection properties in 

Task 3 : use Create-northwind_hibernate_Envers.sql script to create tables in DB

Task 4 : Use Spring-data-JPA with Hibernate as its JPA provider

Task 5 : Generate Entities/Domain classes for the tables using jboss Hibernate-tools

Task 6 : Write a custom template for Hibernate-tools to not generate getters and setters (Pending)

Task 7 : Add Lombok dependency and update all the Domain classes to use 
					
					import lombok.Getter;
					import lombok.Setter;
					
					@Getter
					@Setter
					
Task 8 : Install Lombok on Eclipse IDE by executing the jar that is added as a maven dependency with below cmd
				cmd : java -jar lombok-*.*.*.jar
				
Task 9 : write Repository Interface and extend them with JpaRepository or CrudRepository as per need to take advantage of Spring JPA provided CRUD operations impl

Task 10: write a RESTful API and a service Interface + Impl that will call Repository methods to perform a insert and update on tables

Task 11: Enable Envers and add @Audited annotation on top of Entities that needs _AUD rec inserted and also add @NotAudited on fields that should not be audited

Task 12: Customize Envers audit behavior such that it doesn't audit inserts.

Task 13: using spring-jpa AuditingEntityListener to capture @CreatedBy, @CreatedDate, @LastModifiedBy and @LastModifiedDate for inserts and updates 